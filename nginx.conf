user root;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    upstream django {
        server 127.0.0.1:8001;
    }

    upstream bun_ssr {
        server 127.0.0.1:3000;
    }

    server {
        listen 8000;
        server_name _;

        client_max_body_size 100M;

        # Check if app is starting up - return 503 with retry info
        # This prevents 504 Gateway Timeout when serverless services are waking
        set $app_starting 0;
        if (-f /tmp/app_starting) {
            set $app_starting 1;
        }

        # Django backend routes
        location /api/ {
            if ($app_starting = 1) {
                add_header Retry-After 30 always;
                return 503 "<html><body><h1>Service Warming Up</h1><p>The application is starting. Please wait 30 seconds and try again.</p><p>Your browser will automatically retry...</p></body></html>";
            }

            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        location /admin/ {
            if ($app_starting = 1) {
                add_header Retry-After 30 always;
                return 503 "<html><body><h1>Service Warming Up</h1><p>The application is starting. Please wait 30 seconds and try again.</p><p>Your browser will automatically retry...</p></body></html>";
            }

            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        location /media/ {
            if ($app_starting = 1) {
                add_header Retry-After 30 always;
                return 503 "<html><body><h1>Service Warming Up</h1><p>The application is starting. Please wait 30 seconds and try again.</p><p>Your browser will automatically retry...</p></body></html>";
            }

            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # Static files (themes, fonts, images, backgrounds)
        location /static/ {
            alias /app/public_collected/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Health check endpoint (Django)
        location /up {
            if ($app_starting = 1) {
                add_header Retry-After 30 always;
                return 503 "Service warming up";
            }

            proxy_pass http://django;
            proxy_set_header Host $host;
            access_log off;
        }

        # Everything else goes to Bun SSR server (TanStack Start)
        location / {
            if ($app_starting = 1) {
                add_header Retry-After 30 always;
                return 503 "<html><body><h1>Service Warming Up</h1><p>The application is starting. Please wait 30 seconds and try again.</p><p>Your browser will automatically retry...</p></body></html>";
            }

            proxy_pass http://bun_ssr;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;

            # SSR-specific headers
            proxy_buffering off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
